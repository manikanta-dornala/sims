{"mappings":"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","sources":["<anon>","moving-guassians/sketch.ts","moving-guassians/params.ts","moving-guassians/simulation.ts","moving-guassians/center.ts"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire5b7a\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire5b7a\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $7Pz0b = parcelRequire(\"7Pz0b\");\nclass $62d6d1c86c6e3384$export$2e2bcd8739ae039 {\n    constructor(){\n        this.isPaused = false;\n        this.particleSize = 5;\n        this.lineMaxDist = 150;\n        this.WallThickness = 0;\n        this.WallBuffer = 50;\n        this.InitialPopulation = 160;\n        this.MaxSpeed = 10;\n        this.MinSpeed = 8;\n        this.MaxForce = 0.2;\n    }\n}\n\n\nclass $4358c15e6de98231$export$2e2bcd8739ae039 {\n    constructor(p5){\n        this.p5 = p5;\n        this.position = this.p5.createVector(Math.random() * p5.windowWidth, Math.random() * p5.windowHeight);\n        this.heading = Math.random() * 2 * this.p5.PI;\n        this.velocity = this.p5.createVector(this.p5.cos(this.heading), this.p5.sin(this.heading)).normalize().mult(window.params.MaxSpeed * Math.random());\n        this.color = this.p5.color(Math.random() * 255, Math.random() * 255, Math.random() * 255);\n        this.size = 5;\n        this.mass = 1;\n        this.sigma = this.p5.createVector(this.p5.random(30, 50));\n        this.amplitude = this.p5.random(4, 5);\n    }\n    draw() {\n        this.p5.push();\n        this.p5.translate(this.position.x, this.position.y);\n        this.p5.fill(this.color);\n        this.p5.ellipse(0, 0, this.size, this.size);\n        this.p5.fill(0, 0, 0);\n        this.p5.pop();\n    }\n    step(force) {\n        var acceleration = this.p5.createVector(force.x, force.y);\n        acceleration = acceleration.mult(this.mass);\n        this.velocity.add(acceleration);\n        if (this.velocity.mag() < window.params.MinSpeed) {\n            this.velocity.normalize();\n            this.velocity.mult(window.params.MinSpeed);\n        }\n        this.velocity.limit(window.params.MaxSpeed);\n        this.position.add(this.velocity);\n        this.warpWorld();\n    }\n    warpWorld() {\n        var wx = this.p5.windowWidth;\n        var wy = this.p5.windowHeight;\n        var b = window.params.WallBuffer;\n        if (this.position.x < b) this.position.x = wx - 1.1 * b;\n        else if (this.position.x > wx - b) this.position.x = 1.1 * b;\n        if (this.position.y < b) this.position.y = wy - 1.1 * b;\n        else if (this.position.y > wy - b) this.position.y = 1.1 * b;\n    }\n}\n\n\nvar $88ff0517c5f30ed1$var$startTime, $88ff0517c5f30ed1$var$endTime;\nfunction $88ff0517c5f30ed1$var$start() {\n    $88ff0517c5f30ed1$var$startTime = new Date();\n}\nfunction $88ff0517c5f30ed1$var$end() {\n    $88ff0517c5f30ed1$var$endTime = new Date();\n    var timeDiff = $88ff0517c5f30ed1$var$endTime - $88ff0517c5f30ed1$var$startTime; //in ms\n    timeDiff /= 1000;\n}\nclass $88ff0517c5f30ed1$export$2e2bcd8739ae039 {\n    constructor(p5){\n        this.centers = [];\n        this.p5 = p5;\n        for(let i = 0; i < 5; i++){\n            let particle = new (0, $4358c15e6de98231$export$2e2bcd8739ae039)(this.p5);\n            this.centers.push(particle);\n        }\n        this.img = this.p5.createImage(this.p5.windowWidth, this.p5.windowHeight);\n        this.img.loadPixels();\n    }\n    run() {\n        this.centers.forEach((center)=>{\n            center.draw();\n            center.step(this.p5.createVector(Math.random(), Math.random()));\n        });\n        this.updateBackground();\n    }\n    updateBackground() {\n        let x, y;\n        $88ff0517c5f30ed1$var$start();\n        for(y = 0; y < this.img.height; y++)for(x = 0; x < this.img.width; x++){\n            let c = this.p5.map(this.getColor(x, y), 0, 1, 0, 255);\n            let index = (x + y * this.img.width) * 4;\n            this.img.pixels[index] = 255;\n            this.img.pixels[index + 1] = c;\n            this.img.pixels[index + 2] = c;\n            this.img.pixels[index + 3] = 255;\n        }\n        $88ff0517c5f30ed1$var$end();\n        this.img.updatePixels();\n        this.p5.image(this.img, 0, 0);\n    }\n    getColor(x, y) {\n        let result = 0;\n        this.centers.forEach((center)=>{\n            result += center.amplitude * Math.exp(-0.5 / center.sigma.x ** 2 * ((x - center.position.x) ** 2 + (y - center.position.y) ** 2));\n        });\n        return result / this.centers.length;\n    }\n}\n\n\nconst $4d8ec3b1b92f7b88$var$sketch = (p5)=>{\n    let is_canvas_infocus = false;\n    let params = new (0, $62d6d1c86c6e3384$export$2e2bcd8739ae039)();\n    window.params = params;\n    let simulation = new (0, $88ff0517c5f30ed1$export$2e2bcd8739ae039)(p5);\n    window.simulation = simulation;\n    window.p5 = p5;\n    p5.setup = ()=>{\n        var cnv = p5.createCanvas(p5.windowWidth, p5.windowHeight);\n        cnv.mouseOver(()=>{\n            is_canvas_infocus = true;\n        });\n        cnv.mouseOut(()=>{\n            is_canvas_infocus = false;\n        });\n        cnv.style(\"display\", \"block\");\n        cnv.parent(\"sketch-holder\");\n    };\n    p5.windowResized = ()=>{\n        p5.resizeCanvas(p5.windowWidth, p5.windowHeight);\n    };\n    p5.draw = ()=>{\n        simulation.run();\n    };\n};\nnew (0, (/*@__PURE__*/$parcel$interopDefault($7Pz0b)))($4d8ec3b1b92f7b88$var$sketch);\n\n\n//# sourceMappingURL=sketch.2fa11abc.js.map\n","import P5 from 'p5';\nimport Params from './params';\nimport Simulation from './simulation';\nconst sketch = (p5: P5) => {\n    let is_canvas_infocus = false;\n    let params = new Params();\n    window.params = params;\n    let simulation = new Simulation(p5);\n    window.simulation = simulation;\n    window.p5 = p5;\n    p5.setup = () => {\n        var cnv = p5.createCanvas(p5.windowWidth, p5.windowHeight);\n        cnv.mouseOver(() => {\n            is_canvas_infocus = true;\n        });\n        cnv.mouseOut(() => {\n            is_canvas_infocus = false;\n        });\n        cnv.style('display', 'block');\n        cnv.parent('sketch-holder');\n    };\n\n    p5.windowResized = () => {\n        p5.resizeCanvas(p5.windowWidth, p5.windowHeight);\n    };\n\n    p5.draw = () => {\n        simulation.run();\n    };\n};\n\nnew P5(sketch);\n","export default class Params {\n    isPaused = false;\n    particleSize = 5;\n    lineMaxDist = 150;\n    WallThickness = 0;\n    WallBuffer = 50;\n    InitialPopulation = 160;\n    MaxSpeed = 10;\n    MinSpeed = 8;\n    MaxForce = 0.2;\n}\n","import P5, { Color } from 'p5';\nimport GuassianCenter from './center';\nvar startTime, endTime;\n\nfunction start() {\n    startTime = new Date();\n}\n\nfunction end() {\n    endTime = new Date();\n    var timeDiff = endTime - startTime; //in ms\n    timeDiff /= 1000;\n}\nexport default class Simulation {\n    p5: P5;\n    img: P5.Image;\n    centers: Array<GuassianCenter> = [];\n    constructor(p5: P5) {\n        this.p5 = p5;\n        for (let i = 0; i < 5; i++) {\n            let particle = new GuassianCenter(this.p5);\n            this.centers.push(particle);\n        }\n        this.img = this.p5.createImage(\n            this.p5.windowWidth,\n            this.p5.windowHeight\n        );\n        this.img.loadPixels();\n    }\n    run() {\n        this.centers.forEach((center) => {\n            center.draw();\n            center.step(this.p5.createVector(Math.random(), Math.random()));\n        });\n        this.updateBackground();\n    }\n\n    updateBackground() {\n        let x, y;\n        start();\n        for (y = 0; y < this.img.height; y++) {\n            for (x = 0; x < this.img.width; x++) {\n                let c = this.p5.map(this.getColor(x, y), 0, 1, 0, 255);\n                let index = (x + y * this.img.width) * 4;\n                this.img.pixels[index] = 255;\n                this.img.pixels[index + 1] = c;\n                this.img.pixels[index + 2] = c;\n                this.img.pixels[index + 3] = 255;\n            }\n        }\n        end();\n\n        this.img.updatePixels();\n        this.p5.image(this.img, 0, 0);\n    }\n\n    getColor(x, y) {\n        let result = 0;\n        this.centers.forEach((center) => {\n            result +=\n                center.amplitude *\n                Math.exp(\n                    ((-0.5 * 1) / center.sigma.x ** 2) *\n                        ((x - center.position.x) ** 2 +\n                            (y - center.position.y) ** 2)\n                );\n        });\n        return result / this.centers.length;\n    }\n}\n","import P5 from 'p5';\nimport params from './params';\nexport default class GuassianCenter {\n    amplitude: number;\n    sigma: P5.Vector;\n    mass: number;\n    color: P5.Color;\n    position: P5.Vector;\n    velocity: P5.Vector;\n    size: number;\n    heading: number;\n    p5: P5;\n    constructor(p5: P5) {\n        this.p5 = p5;\n        this.position = this.p5.createVector(\n            Math.random() * p5.windowWidth,\n            Math.random() * p5.windowHeight\n        );\n        this.heading = Math.random() * 2 * this.p5.PI;\n        this.velocity = this.p5\n            .createVector(this.p5.cos(this.heading), this.p5.sin(this.heading))\n            .normalize()\n            .mult(window.params.MaxSpeed * Math.random());\n        this.color = this.p5.color(\n            Math.random() * 255,\n            Math.random() * 255,\n            Math.random() * 255\n        );\n        this.size = 5;\n        this.mass = 1;\n        this.sigma = this.p5.createVector(this.p5.random(30, 50));\n        this.amplitude = this.p5.random(4, 5);\n    }\n\n    draw() {\n        this.p5.push();\n        this.p5.translate(this.position.x, this.position.y);\n        this.p5.fill(this.color);\n        this.p5.ellipse(0, 0, this.size, this.size);\n        this.p5.fill(0, 0, 0);\n        this.p5.pop();\n    }\n\n    step(force: P5.Vector) {\n        var acceleration = this.p5.createVector(force.x, force.y);\n        acceleration = acceleration.mult(this.mass);\n        this.velocity.add(acceleration);\n        if (this.velocity.mag() < window.params.MinSpeed) {\n            this.velocity.normalize();\n            this.velocity.mult(window.params.MinSpeed);\n        }\n        this.velocity.limit(window.params.MaxSpeed);\n        this.position.add(this.velocity);\n        this.warpWorld();\n    }\n\n    warpWorld() {\n        var wx = this.p5.windowWidth;\n        var wy = this.p5.windowHeight;\n        var b = window.params.WallBuffer;\n        if (this.position.x < b) {\n            this.position.x = wx - 1.1 * b;\n        } else if (this.position.x > wx - b) {\n            this.position.x = 1.1 * b;\n        }\n\n        if (this.position.y < b) {\n            this.position.y = wy - 1.1 * b;\n        } else if (this.position.y > wy - b) {\n            this.position.y = 1.1 * b;\n        }\n    }\n}\n"],"names":["$88ff0517c5f30ed1$var$startTime","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$7Pz0b","$62d6d1c86c6e3384$export$2e2bcd8739ae039","constructor","isPaused","particleSize","lineMaxDist","WallThickness","WallBuffer","InitialPopulation","MaxSpeed","MinSpeed","MaxForce","$4358c15e6de98231$export$2e2bcd8739ae039","p5","position","createVector","Math","random","windowWidth","windowHeight","heading","PI","velocity","cos","sin","normalize","mult","window","params","color","size","mass","sigma","amplitude","draw","push","translate","x","y","fill","ellipse","pop","step","force","acceleration","add","mag","limit","warpWorld","wx","wy","b","$88ff0517c5f30ed1$export$2e2bcd8739ae039","centers","i","particle","img","createImage","loadPixels","run","forEach","center","updateBackground","height","width","c","map","getColor","index","pixels","updatePixels","image","result","exp","length","a","__esModule","default","simulation","setup","cnv","createCanvas","mouseOver","mouseOut","style","parent","windowResized","resizeCanvas"],"version":3,"file":"sketch.2fa11abc.js.map"}