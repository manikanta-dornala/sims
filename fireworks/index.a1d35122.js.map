{"mappings":"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","sources":["fireworks/params.ts","fireworks/particle.ts","fireworks/simulation.ts","fireworks/sketch.ts"],"sourcesContent":["class Params {\n    isPaused = false;\n    particleSize = 1;\n    lineMaxDist = 150;\n    WallThickness = 0;\n    WallBuffer = 150;\n    InitialPopulation = 5;\n    MaxSpeed = 8;\n    MinSpeed = 6;\n    MaxForce = 0.2;\n    g = 0.08;\n}\nconst params = new Params();\nexport default params;\n","import P5 from 'p5';\nimport params from './params';\nexport default class Particle {\n    mass: number;\n    color: P5.Color;\n    position: P5.Vector;\n    velocity: P5.Vector;\n    size: number;\n    heading: number;\n    p5: P5;\n    isVisible = true;\n    frameCount = 0;\n    constructor(p5: P5) {\n        this.p5 = p5;\n        this.position = this.p5.createVector(\n            Math.random() * p5.windowWidth,\n            Math.random() * p5.windowHeight\n        );\n        this.heading = Math.random() * 2 * this.p5.PI;\n        this.velocity = this.p5\n            .createVector(this.p5.cos(this.heading), this.p5.sin(this.heading))\n            .normalize()\n            .mult(\n                this.p5.map(\n                    Math.random(),\n                    0,\n                    1,\n                    params.MinSpeed,\n                    params.MaxSpeed\n                )\n            );\n        this.color = this.p5.color(\n            (parseInt((Math.random() * 5).toFixed()) * 255) / 5,\n            (parseInt((Math.random() * 5).toFixed()) * 255) / 5,\n            (parseInt((Math.random() * 5).toFixed()) * 255) / 5\n        );\n        this.size = params.particleSize;\n        this.mass = params.particleSize;\n    }\n\n    draw() {\n        if (this.isVisible) {\n            this.p5.push();\n            this.p5.translate(this.position.x, this.position.y);\n            this.p5.stroke(this.color);\n            this.p5.ellipse(0, 0, this.size);\n            this.p5.fill(this.color);\n            this.p5.pop();\n            if (!params.isPaused) {\n                this.frameCount++;\n            }\n            if (this.frameCount > 300) {\n                this.isVisible = false;\n            }\n        }\n    }\n\n    step(force: P5.Vector) {\n        var acceleration = P5.Vector.mult(force, 1 / this.mass);\n        this.velocity.add(acceleration);\n        this.position.add(this.velocity);\n        this.warpWorld();\n    }\n\n    warpWorld() {\n        if (\n            this.position.x < params.WallBuffer ||\n            this.position.x > this.p5.windowWidth - params.WallBuffer ||\n            this.position.y < params.WallBuffer ||\n            this.position.y > this.p5.windowHeight - params.WallBuffer\n        ) {\n            this.isVisible = false;\n        }\n    }\n\n    explode(): Particle[] {\n        let result = [];\n        for (let i = 0; i < 300; i++) {\n            let particle = new Particle(this.p5);\n            particle.position = this.position.copy();\n            particle.size = this.p5.map(Math.random(), 0, 1, 1, 1.5);\n            particle.mass = this.p5.map(Math.random(), 0, 1, 1, 2);\n            particle.color = this.color;\n            particle.frameCount = this.p5.map(Math.random(), 0, 1, 250, 280);\n            particle.velocity\n                .normalize()\n                .mult(this.p5.map(Math.random(), 0, 1, 0.1, 2))\n                .add(this.p5.createVector(0, -2));\n            result.push(particle);\n        }\n        return result;\n    }\n}\n","import P5 from 'p5';\nimport params from './params';\nimport Particle from './particle';\nexport default class Simulation {\n    particles: Array<Particle> = [];\n    explosionParticles: Array<Particle> = [];\n    p5: P5;\n    groundHeight: number;\n    g: P5.Vector;\n    constructor(p5: P5) {\n        this.p5 = p5;\n        this.groundHeight = this.p5.windowHeight - params.WallBuffer;\n        this.g = this.p5.createVector(0, params.g);\n    }\n\n    run() {\n        this.drawGround();\n        let skip = Math.random() > 0.9;\n        if (!params.isPaused && Math.random() > 0.98) this.addNewParticle();\n        this.particles.forEach((particle: Particle) => {\n            if (particle.isVisible) {\n                if (!params.isPaused && !skip) {\n                    let force = P5.Vector.mult(this.g, particle.mass);\n                    particle.step(force);\n                    if (particle.velocity.mag() < 0.1) {\n                        this.explosionParticles.push(...particle.explode());\n                        particle.isVisible = false;\n                    }\n                }\n                particle.draw();\n            }\n        });\n        this.particles = this.particles.filter(\n            (particle) => particle.isVisible\n        );\n        this.explosionParticles.forEach((particle: Particle) => {\n            if (particle.isVisible) {\n                if (!params.isPaused && !skip) {\n                    let force = P5.Vector.mult(this.g, particle.mass);\n                    particle.step(force);\n                    if (particle.position.y > this.groundHeight) {\n                        particle.isVisible = false;\n                    }\n                }\n                particle.draw();\n            }\n        });\n        this.explosionParticles = this.explosionParticles.filter(\n            (particle) => particle.isVisible\n        );\n    }\n\n    drawGround() {\n        this.p5.stroke(255, 255, 255);\n        this.p5.line(\n            0,\n            this.groundHeight,\n            this.p5.windowWidth,\n            this.groundHeight\n        );\n    }\n\n    addNewParticle() {\n        let particle = new Particle(this.p5);\n        particle.velocity = this.p5.createVector(\n            0,\n            -1 *\n                this.p5.map(\n                    Math.random(),\n                    0,\n                    1,\n                    params.MinSpeed,\n                    params.MaxSpeed\n                )\n        );\n        particle.position = this.p5.createVector(\n            this.p5.map(\n                Math.random(),\n                0,\n                1,\n                2 * params.WallBuffer,\n                this.p5.windowWidth - 2 * params.WallBuffer\n            ),\n            this.groundHeight\n        );\n        this.particles.push(particle);\n    }\n}\n","import P5 from 'p5';\nimport params from './params';\nimport Simulation from './simulation';\n\nconst sketch = (p5: P5) => {\n    var is_canvas_infocus = false;\n    var simulation = new Simulation(p5);\n\n    p5.setup = () => {\n        var cnv = p5.createCanvas(p5.windowWidth, p5.windowHeight);\n        cnv.mouseOver(() => {\n            is_canvas_infocus = true;\n        });\n        cnv.mouseOut(() => {\n            is_canvas_infocus = false;\n        });\n        cnv.style('display', 'block');\n        cnv.parent('sketch-holder');\n        for (let i = 0; i < params.InitialPopulation; i++) {\n            simulation.addNewParticle();\n        }\n    };\n\n    p5.windowResized = () => {\n        p5.resizeCanvas(p5.windowWidth, p5.windowHeight);\n    };\n\n    p5.draw = () => {\n        p5.background(20, 20, 0);\n        simulation.run();\n    };\n    p5.keyPressed = () => {\n        if ((p5.key = ' ')) {\n            params.isPaused = !params.isPaused;\n        }\n    };\n};\n\nnew P5(sketch);\n"],"names":["$606498dca8ae7189$export$2e2bcd8739ae039","this","isPaused","particleSize","lineMaxDist","WallThickness","WallBuffer","InitialPopulation","MaxSpeed","MinSpeed","MaxForce","g","$1313ff225625432c$export$2e2bcd8739ae039","p5","isVisible","frameCount","position","createVector","Math","random","windowWidth","windowHeight","heading","PI","velocity","cos","sin","normalize","mult","map","color","parseInt","toFixed","size","mass","draw","push","translate","x","y","stroke","ellipse","fill","pop","step","force","acceleration","$parcel$interopDefault","$7Pz0b","Vector","add","warpWorld","explode","result","i","particle","copy","$77be04b10aaaeff5$export$2e2bcd8739ae039","particles","explosionParticles","groundHeight","run","drawGround","skip","addNewParticle","forEach","mag","filter","line","simulation","setup","cnv","createCanvas","mouseOver","mouseOut","style","parent","windowResized","resizeCanvas","background","keyPressed","key"],"version":3,"file":"index.a1d35122.js.map"}