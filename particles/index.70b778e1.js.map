{"mappings":"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","sources":["<anon>","particles/sketch.ts","particles/params.ts","particles/simulation.ts","particles/particle.ts"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire5b7a\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire5b7a\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $7Pz0b = parcelRequire(\"7Pz0b\");\nclass $8850ff8f2cf55c55$var$Params {\n    constructor(){\n        this.particleSize = 5;\n        this.lineMaxDist = 150;\n        this.WallThickness = 0;\n        this.WallBuffer = 50;\n        this.InitialPopulation = 160;\n        this.MaxSpeed = 3;\n        this.MinSpeed = 0.5;\n        this.MaxForce = 0.2;\n    }\n}\nconst $8850ff8f2cf55c55$var$params = new $8850ff8f2cf55c55$var$Params();\nvar $8850ff8f2cf55c55$export$2e2bcd8739ae039 = $8850ff8f2cf55c55$var$params;\n\n\n\nvar $7Pz0b = parcelRequire(\"7Pz0b\");\n\n\nvar $7Pz0b = parcelRequire(\"7Pz0b\");\n\nclass $c7e093eee7f53d61$export$2e2bcd8739ae039 {\n    constructor(p5){\n        this.p5 = p5;\n        this.position = this.p5.createVector(Math.random() * p5.windowWidth, Math.random() * p5.windowHeight);\n        this.heading = Math.random() * 2 * this.p5.PI;\n        this.velocity = this.p5.createVector(this.p5.cos(this.heading), this.p5.sin(this.heading)).normalize().mult((0, $8850ff8f2cf55c55$export$2e2bcd8739ae039).MaxSpeed * Math.random());\n        this.color = this.p5.color(Math.random() * 255, Math.random() * 255, Math.random() * 255);\n        this.size = 1;\n        this.mass = 1;\n    }\n    draw() {\n        this.p5.push();\n        this.p5.translate(this.position.x, this.position.y);\n        this.p5.fill(this.color);\n        this.p5.ellipse(0, 0, this.size, this.size);\n        this.p5.fill(0, 0, 0);\n        this.p5.pop();\n    }\n    step(force) {\n        var acceleration = this.p5.createVector(force.x, force.y);\n        acceleration = acceleration.mult(this.mass);\n        this.velocity.add(acceleration);\n        if (this.velocity.mag() < (0, $8850ff8f2cf55c55$export$2e2bcd8739ae039).MinSpeed) {\n            this.velocity.normalize();\n            this.velocity.mult((0, $8850ff8f2cf55c55$export$2e2bcd8739ae039).MinSpeed);\n        }\n        this.velocity.limit((0, $8850ff8f2cf55c55$export$2e2bcd8739ae039).MaxSpeed);\n        this.position.add(this.velocity);\n        this.warpWorld();\n    }\n    warpWorld() {\n        var wx = this.p5.windowWidth;\n        var wy = this.p5.windowHeight;\n        var b = (0, $8850ff8f2cf55c55$export$2e2bcd8739ae039).WallBuffer;\n        if (this.position.x < b) this.position.x = wx - 1.1 * b;\n        else if (this.position.x > wx - b) this.position.x = 1.1 * b;\n        if (this.position.y < b) this.position.y = wy - 1.1 * b;\n        else if (this.position.y > wy - b) this.position.y = 1.1 * b;\n    }\n    getDistanceFrom(target) {\n        var distance = (0, (/*@__PURE__*/$parcel$interopDefault($7Pz0b))).Vector.dist(this.position, target);\n        var p2 = this.p5.createVector(target.x, target.y);\n        if (this.position.y < (0, $8850ff8f2cf55c55$export$2e2bcd8739ae039).WallBuffer || this.position.y > this.p5.windowHeight - (0, $8850ff8f2cf55c55$export$2e2bcd8739ae039).WallBuffer) // Toroidal warping\n        p2.y = -target.y + this.p5.windowHeight - (0, $8850ff8f2cf55c55$export$2e2bcd8739ae039).WallBuffer;\n        if (this.position.x < (0, $8850ff8f2cf55c55$export$2e2bcd8739ae039).WallBuffer || this.position.x > this.p5.windowWidth - (0, $8850ff8f2cf55c55$export$2e2bcd8739ae039).WallBuffer) // Toroidal warping\n        p2.x = -target.x + this.p5.windowWidth - (0, $8850ff8f2cf55c55$export$2e2bcd8739ae039).WallBuffer;\n        var distance2 = (0, (/*@__PURE__*/$parcel$interopDefault($7Pz0b))).Vector.dist(this.position, p2);\n        distance = this.p5.min(distance, distance2);\n        return distance;\n    }\n}\n\n\nclass $6dd4b2c6c313b40c$export$2e2bcd8739ae039 {\n    constructor(p5){\n        this.particles = [];\n        this.p5 = p5;\n    }\n    run() {\n        this.particles.forEach((particle)=>{\n            // Draw things\n            particle.draw();\n            this.drawLines(particle, this.particles);\n            // apply physics\n            // Here, every particle gets hit by some random force\n            let heading = Math.random() * 2 * this.p5.PI;\n            let force = this.p5.createVector(this.p5.cos(heading), this.p5.sin(heading)).normalize().mult(0.1 * (0, $8850ff8f2cf55c55$export$2e2bcd8739ae039).MaxSpeed * Math.random());\n            particle.step(force);\n        });\n    }\n    drawLines(particle, particles) {\n        particles.forEach((otherParticle)=>{\n            let d = (0, (/*@__PURE__*/$parcel$interopDefault($7Pz0b))).Vector.dist(otherParticle.position, particle.position);\n            if (d < (0, $8850ff8f2cf55c55$export$2e2bcd8739ae039).lineMaxDist && this.p5.map(d, 0, (0, $8850ff8f2cf55c55$export$2e2bcd8739ae039).lineMaxDist, 2, 0) > 0.75) {\n                this.p5.stroke(this.p5.color(0, 255, 0, this.p5.map(d, 0, (0, $8850ff8f2cf55c55$export$2e2bcd8739ae039).lineMaxDist, 255, 0)));\n                this.p5.strokeWeight(this.p5.map(d, 0, (0, $8850ff8f2cf55c55$export$2e2bcd8739ae039).lineMaxDist, 2, 0));\n                this.p5.line(particle.position.x, particle.position.y, otherParticle.position.x, otherParticle.position.y);\n            }\n        });\n    }\n    addNewParticle() {\n        let particle = new (0, $c7e093eee7f53d61$export$2e2bcd8739ae039)(this.p5);\n        particle.size = (0, $8850ff8f2cf55c55$export$2e2bcd8739ae039).particleSize;\n        this.particles.push(particle);\n    }\n}\n\n\nconst $0166172ce9560c2f$var$sketch = (p5)=>{\n    var is_canvas_infocus = false;\n    var simulation = new (0, $6dd4b2c6c313b40c$export$2e2bcd8739ae039)(p5);\n    p5.setup = ()=>{\n        var cnv = p5.createCanvas(p5.windowWidth, p5.windowHeight);\n        cnv.mouseOver(()=>{\n            is_canvas_infocus = true;\n        });\n        cnv.mouseOut(()=>{\n            is_canvas_infocus = false;\n        });\n        cnv.style(\"display\", \"block\");\n        cnv.parent(\"sketch-holder\");\n        for(let i = 0; i < (0, $8850ff8f2cf55c55$export$2e2bcd8739ae039).InitialPopulation; i++)simulation.addNewParticle();\n    };\n    p5.windowResized = ()=>{\n        p5.resizeCanvas(p5.windowWidth * 0.9, p5.windowHeight * 0.9);\n    };\n    p5.draw = ()=>{\n        p5.background(20, 20, 0);\n        simulation.run();\n    };\n};\nnew (0, (/*@__PURE__*/$parcel$interopDefault($7Pz0b)))($0166172ce9560c2f$var$sketch);\n\n\n//# sourceMappingURL=index.70b778e1.js.map\n","import P5 from 'p5';\nimport params from './params';\nimport Simulation from './simulation';\n\nconst sketch = (p5: P5) => {\n    var is_canvas_infocus = false;\n    var simulation = new Simulation(p5);\n\n    p5.setup = () => {\n        var cnv = p5.createCanvas(p5.windowWidth, p5.windowHeight);\n        cnv.mouseOver(() => {\n            is_canvas_infocus = true;\n        });\n        cnv.mouseOut(() => {\n            is_canvas_infocus = false;\n        });\n        cnv.style('display', 'block');\n        cnv.parent('sketch-holder');\n        for (let i = 0; i < params.InitialPopulation; i++) {\n            simulation.addNewParticle();\n        }\n    };\n\n    p5.windowResized = () => {\n        p5.resizeCanvas(p5.windowWidth * 0.9, p5.windowHeight * 0.9);\n    };\n\n    p5.draw = () => {\n        p5.background(20, 20, 0);\n        simulation.run();\n    };\n};\n\nnew P5(sketch);\n","class Params {\n    particleSize = 5;\n    lineMaxDist = 150;\n    WallThickness = 0;\n    WallBuffer = 50;\n    InitialPopulation = 160;\n    MaxSpeed = 3;\n    MinSpeed = 0.5;\n    MaxForce = 0.2;\n}\nconst params = new Params();\nexport default params;\n","import P5 from 'p5';\nimport params from './params';\nimport Particle from './particle';\nexport default class Simulation {\n    particles: Array<Particle> = [];\n    p5: P5;\n\n    constructor(p5: P5) {\n        this.p5 = p5;\n    }\n\n    run() {\n        this.particles.forEach((particle) => {\n            // Draw things\n            particle.draw();\n            this.drawLines(particle, this.particles);\n\n            // apply physics\n            // Here, every particle gets hit by some random force\n            let heading = Math.random() * 2 * this.p5.PI;\n            let force = this.p5\n                .createVector(this.p5.cos(heading), this.p5.sin(heading))\n                .normalize()\n                .mult(0.1 * params.MaxSpeed * Math.random());\n            particle.step(force);\n        });\n    }\n\n    drawLines(particle: Particle, particles: Array<Particle>) {\n        particles.forEach((otherParticle) => {\n            let d = P5.Vector.dist(otherParticle.position, particle.position);\n            if (\n                d < params.lineMaxDist &&\n                this.p5.map(d, 0, params.lineMaxDist, 2, 0) > 0.75\n            ) {\n                this.p5.stroke(\n                    this.p5.color(\n                        0,\n                        255,\n                        0,\n                        this.p5.map(d, 0, params.lineMaxDist, 255, 0)\n                    )\n                );\n                this.p5.strokeWeight(\n                    this.p5.map(d, 0, params.lineMaxDist, 2, 0)\n                );\n                this.p5.line(\n                    particle.position.x,\n                    particle.position.y,\n                    otherParticle.position.x,\n                    otherParticle.position.y\n                );\n            }\n        });\n    }\n\n    addNewParticle() {\n        let particle = new Particle(this.p5);\n        particle.size = params.particleSize;\n        this.particles.push(particle);\n    }\n}\n","import P5 from 'p5';\nimport params from './params';\nexport default class Particle {\n    mass: number;\n    color: P5.Color;\n    position: P5.Vector;\n    velocity: P5.Vector;\n    size: number;\n    heading: number;\n    p5: P5;\n    constructor(p5: P5) {\n        this.p5 = p5;\n        this.position = this.p5.createVector(\n            Math.random() * p5.windowWidth,\n            Math.random() * p5.windowHeight\n        );\n        this.heading = Math.random() * 2 * this.p5.PI;\n        this.velocity = this.p5\n            .createVector(this.p5.cos(this.heading), this.p5.sin(this.heading))\n            .normalize()\n            .mult(params.MaxSpeed * Math.random());\n        this.color = this.p5.color(\n            Math.random() * 255,\n            Math.random() * 255,\n            Math.random() * 255\n        );\n        this.size = 1;\n        this.mass = 1;\n    }\n\n    draw() {\n        this.p5.push();\n        this.p5.translate(this.position.x, this.position.y);\n        this.p5.fill(this.color);\n        this.p5.ellipse(0, 0, this.size, this.size);\n        this.p5.fill(0, 0, 0);\n        this.p5.pop();\n    }\n\n    step(force: P5.Vector) {\n        var acceleration = this.p5.createVector(force.x, force.y);\n        acceleration = acceleration.mult(this.mass);\n\n        this.velocity.add(acceleration);\n        if (this.velocity.mag() < params.MinSpeed) {\n            this.velocity.normalize();\n            this.velocity.mult(params.MinSpeed);\n        }\n        this.velocity.limit(params.MaxSpeed);\n        this.position.add(this.velocity);\n        this.warpWorld();\n    }\n\n    warpWorld() {\n        var wx = this.p5.windowWidth;\n        var wy = this.p5.windowHeight;\n        var b = params.WallBuffer;\n        if (this.position.x < b) {\n            this.position.x = wx - 1.1 * b;\n        } else if (this.position.x > wx - b) {\n            this.position.x = 1.1 * b;\n        }\n\n        if (this.position.y < b) {\n            this.position.y = wy - 1.1 * b;\n        } else if (this.position.y > wy - b) {\n            this.position.y = 1.1 * b;\n        }\n    }\n\n    getDistanceFrom(target: P5.Vector) {\n        var distance = P5.Vector.dist(this.position, target);\n        var p2 = this.p5.createVector(target.x, target.y);\n\n        if (\n            this.position.y < params.WallBuffer ||\n            this.position.y > this.p5.windowHeight - params.WallBuffer\n        ) {\n            // Toroidal warping\n            p2.y = -target.y + this.p5.windowHeight - params.WallBuffer;\n        }\n\n        if (\n            this.position.x < params.WallBuffer ||\n            this.position.x > this.p5.windowWidth - params.WallBuffer\n        ) {\n            // Toroidal warping\n            p2.x = -target.x + this.p5.windowWidth - params.WallBuffer;\n        }\n\n        var distance2 = P5.Vector.dist(this.position, p2);\n        distance = this.p5.min(distance, distance2);\n        return distance;\n    }\n}\n"],"names":["$parcel$interopDefault","a","__esModule","default","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$7Pz0b","$8850ff8f2cf55c55$var$params","constructor","particleSize","lineMaxDist","WallThickness","WallBuffer","InitialPopulation","MaxSpeed","MinSpeed","MaxForce","$c7e093eee7f53d61$export$2e2bcd8739ae039","p5","position","createVector","Math","random","windowWidth","windowHeight","heading","PI","velocity","cos","sin","normalize","mult","color","size","mass","draw","push","translate","x","y","fill","ellipse","pop","step","force","acceleration","add","mag","limit","warpWorld","wx","wy","b","getDistanceFrom","target","distance","Vector","dist","p2","distance2","min","$6dd4b2c6c313b40c$export$2e2bcd8739ae039","particles","run","forEach","particle","drawLines","otherParticle","d","map","stroke","strokeWeight","line","addNewParticle","simulation","setup","cnv","createCanvas","mouseOver","mouseOut","style","parent","i","windowResized","resizeCanvas","background"],"version":3,"file":"index.70b778e1.js.map"}