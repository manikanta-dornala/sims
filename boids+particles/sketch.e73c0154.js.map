{"mappings":"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","sources":["boids+particles/params.ts","boids+particles/shapes/circle.ts","boids+particles/boid.ts","boids+particles/simulation.ts","boids+particles/sketch.ts"],"sourcesContent":["class Params {\n    isPaused = false;\n    boidSize = 5;\n    lineMaxDist = 150;\n    WallThickness = 0;\n    WallBuffer = 50;\n    InitialPopulation = 10;\n    MaxPopulation = 150;\n    MaxSpeed = 3;\n    MinSpeed = 2.5;\n    MaxForce = 0.2;\n    SeperationWeight = 5;\n    AlignmentWeight = 1.5;\n    CohesionWeight = 1.5;\n    SphereOfInfluence = 50;\n    CohesionNeighborhood = 100;\n    DesiredSeperation = 25;\n    SimulationSpeed = 10;\n}\nexport default Params;\n","import P5 from 'p5';\nexport default class CircleBoid {\n    mass: number;\n    color;\n    p5: P5;\n    sizeMultiplier = 5;\n    constructor(p5: P5) {\n        this.p5 = p5;\n        this.color = this.p5.color(\n            Math.random() * 255,\n            Math.random() * 255,\n            Math.random() * 255\n        );\n        this.mass = this.p5.map(Math.random(), 0, 1, 1, 2);\n    }\n\n    draw(position: P5.Vector, angle: number) {\n        this.p5.push();\n        this.p5.translate(position.x, position.y);\n        this.p5.rotate(angle);\n        var len = this.p5.map(this.mass, 1, 2, 1, this.sizeMultiplier);\n        this.p5.fill(this.color);\n        this.p5.stroke(255, 255, 255);\n        // this.p5.line(0, 0, -len / 1.2, len / 4);\n        // this.p5.line(0, 0, -len / 1.2, -len / 4);\n        this.p5.ellipse(\n            0,\n            0,\n            this.sizeMultiplier * this.mass,\n            this.sizeMultiplier * this.mass\n        );\n        this.p5.fill(this.color);\n\n        this.p5.pop();\n    }\n}\n","import P5 from 'p5';\nimport CircleBoid from './shapes/circle';\nimport FishBoid from './shapes/fish';\nexport default class Boid {\n    // mass: number;\n    color: P5.Color;\n    position: P5.Vector;\n    velocity: P5.Vector;\n    heading: number;\n    p5: P5;\n    shape;\n    constructor(p5: P5) {\n        this.p5 = p5;\n        this.position = this.p5.createVector(\n            Math.random() * p5.windowWidth,\n            Math.random() * p5.windowHeight\n        );\n        this.heading = Math.random() * 2 * this.p5.PI;\n        this.velocity = this.p5\n            .createVector(this.p5.cos(this.heading), this.p5.sin(this.heading))\n            .normalize()\n            .mult(window.params.MaxSpeed * Math.random());\n        this.color = this.p5.color(\n            Math.random() * 255,\n            Math.random() * 255,\n            Math.random() * 255\n        );\n        this.shape = new CircleBoid(this.p5);\n        this.shape.sizeMultiplier = 2;\n    }\n\n    set mass(value) {\n        this.shape.mass = value;\n    }\n\n    get mass() {\n        return this.shape.mass;\n    }\n\n    draw() {\n        this.shape.draw(this.position, this.velocity.heading());\n    }\n\n    step(force: P5.Vector) {\n        var acceleration = P5.Vector.mult(force, this.mass);\n        this.velocity.add(acceleration);\n        if (this.velocity.mag() < window.params.MinSpeed) {\n            this.velocity.normalize();\n            this.velocity.mult(window.params.MinSpeed);\n        }\n        this.velocity.limit(window.params.MaxSpeed);\n        this.position.add(this.velocity);\n        this.warpWorld();\n    }\n\n    warpWorld() {\n        var wx = this.p5.windowWidth;\n        var wy = this.p5.windowHeight;\n        var b = window.params.WallBuffer;\n        if (this.position.x < b) {\n            this.position.x = wx - 1.1 * b;\n        } else if (this.position.x > wx - b) {\n            this.position.x = 1.1 * b;\n        }\n\n        if (this.position.y < b) {\n            this.position.y = wy - 1.1 * b;\n        } else if (this.position.y > wy - b) {\n            this.position.y = 1.1 * b;\n        }\n    }\n\n    getDistanceFrom(target: P5.Vector) {\n        var distance = P5.Vector.dist(this.position, target);\n        var p2 = this.p5.createVector(target.x, target.y);\n        if (\n            this.position.y < window.params.WallBuffer ||\n            this.position.y > this.p5.windowHeight - window.params.WallBuffer\n        ) {\n            // Toroidal warping\n            p2.y = -target.y + this.p5.windowHeight - window.params.WallBuffer;\n        }\n        if (\n            this.position.x < window.params.WallBuffer ||\n            this.position.x > this.p5.windowWidth - window.params.WallBuffer\n        ) {\n            // Toroidal warping\n            p2.x = -target.x + this.p5.windowWidth - window.params.WallBuffer;\n        }\n        var distance2 = P5.Vector.dist(this.position, p2);\n        distance = this.p5.min(distance, distance2);\n        return distance;\n    }\n\n    AlignmentForce(boids: Array<Boid>) {\n        var averageVelocity = this.p5.createVector(0, 0);\n        var count = 0;\n        boids?.forEach((boid) => {\n            var d = this.getDistanceFrom(boid.position);\n            if (d > 0 && d < window.params.SphereOfInfluence) {\n                averageVelocity.add(boid.velocity);\n                count++;\n            }\n        });\n\n        if (count > 0) {\n            averageVelocity.div(count);\n            var steer = P5.Vector.sub(averageVelocity, this.velocity);\n            steer.limit(window.params.MaxForce);\n            steer.mult(window.params.AlignmentWeight);\n            return steer;\n        }\n        return this.p5.createVector(0, 0);\n    }\n\n    CohesionForce(boids: Array<Boid>) {\n        var centerOfGravity = this.p5.createVector(0, 0);\n        var count = 0;\n        boids?.forEach((boid) => {\n            var d = this.getDistanceFrom(boid.position);\n            if (d > 0 && d < window.params.CohesionNeighborhood) {\n                var v = this.p5.createVector();\n                v.x = boid.position.x;\n                v.y = boid.position.y;\n                centerOfGravity.add(boid.position);\n                count++;\n            }\n        });\n        if (count > 0) {\n            centerOfGravity.mult(1 / count);\n            var steer = this.Seek(centerOfGravity);\n            steer.mult(window.params.CohesionWeight);\n            return steer;\n        }\n        return this.p5.createVector(0, 0);\n    }\n\n    RepulsionForce(boids: Array<Boid>) {\n        var count = 0;\n        var steer = this.p5.createVector(0, 0);\n        boids?.forEach((boid) => {\n            var d = this.getDistanceFrom(boid.position);\n            if (d > 0 && d < window.params.DesiredSeperation) {\n                count++;\n                var away = P5.Vector.sub(this.position, boid.position);\n                away.mult(1 / d);\n                steer.add(away);\n            }\n        });\n        if (steer.mag() > 0 && count > 0) {\n            steer.limit(window.params.MaxForce);\n        }\n        steer.mult(window.params.SeperationWeight);\n        return steer;\n    }\n\n    Seek(target: P5.Vector) {\n        var desired = P5.Vector.sub(target, this.position);\n        desired.normalize();\n        desired.mult(window.params.MaxSpeed);\n        var steer = P5.Vector.sub(desired, this.velocity);\n        steer.limit(window.params.MaxForce);\n        return steer;\n    }\n\n    Flee(target: P5.Vector) {\n        var desired = P5.Vector.sub(this.position, target);\n        desired.normalize();\n        desired.mult(window.params.MaxSpeed);\n        var steer = P5.Vector.sub(desired, this.velocity);\n        steer.limit(window.params.MaxForce);\n        return steer;\n    }\n\n    GetSteeringForces(boids: Array<Boid>) {\n        var align = this.AlignmentForce(boids);\n        var repulsion = this.RepulsionForce(boids);\n        var cohesion = this.CohesionForce(boids);\n        var force = this.p5.createVector(0, 0);\n        force.add(align);\n        force.add(repulsion);\n        force.add(cohesion);\n        return force;\n    }\n}\n","import P5 from 'p5';\nimport Boid from './boid';\nexport default class Simulation {\n    boids: Array<Boid> = [];\n    p5: P5;\n\n    constructor(p5: P5) {\n        this.p5 = p5;\n    }\n\n    run() {\n        this.boids.forEach((boid) => {\n            // apply physics\n            if (\n                window.params.isPaused == false &&\n                this.p5.frameCount % window.params.SimulationSpeed != 0 &&\n                window.params.SimulationSpeed > 0\n            ) {\n                let force = boid.GetSteeringForces(this.boids);\n                boid.step(force);\n            }\n            boid.draw();\n            this.drawLines(boid, this.boids);\n        });\n    }\n\n    drawLines(boid: Boid, boids: Array<Boid>) {\n        boids.forEach((otherboid) => {\n            let d = P5.Vector.dist(otherboid.position, boid.position);\n            if (d < window.params.lineMaxDist) {\n                this.p5.stroke(\n                    this.p5.color(\n                        0,\n                        255,\n                        0,\n                        this.p5.map(d, 0, window.params.lineMaxDist, 255, 0)\n                    )\n                );\n                this.p5.strokeWeight(\n                    this.p5.map(d, 0, window.params.lineMaxDist, 2, 0)\n                );\n                this.p5.line(\n                    boid.position.x,\n                    boid.position.y,\n                    otherboid.position.x,\n                    otherboid.position.y\n                );\n            }\n        });\n    }\n\n    addNewboid() {\n        if (this.boids.length < window.params.MaxPopulation) {\n            let boid = new Boid(this.p5);\n            this.boids.push(boid);\n        }\n    }\n}\n","import P5 from 'p5';\nimport Params from './params';\nimport Simulation from './simulation';\nwindow.params = new Params();\nconst sketch = (p5: P5) => {\n    let is_canvas_infocus = false;\n    let simulation = new Simulation(p5);\n    window.simulation = simulation;\n    p5.setup = () => {\n        let cnv = p5.createCanvas(p5.windowWidth, p5.windowHeight);\n        cnv.mouseOver(() => {\n            is_canvas_infocus = true;\n        });\n        cnv.mouseOut(() => {\n            is_canvas_infocus = false;\n        });\n        cnv.style('display', 'block');\n        cnv.parent('sketch-holder');\n        for (let i = 0; i < window.params.InitialPopulation; i++) {\n            simulation.addNewboid();\n        }\n    };\n\n    p5.windowResized = () => {\n        p5.resizeCanvas(p5.windowWidth, p5.windowHeight);\n    };\n\n    p5.draw = () => {\n        p5.background(0, 0, 0);\n        simulation.run();\n    };\n\n    p5.keyPressed = () => {\n        if ((p5.key = ' ')) {\n            window.params.isPaused = !window.params.isPaused;\n        }\n    };\n};\nnew P5(sketch);\n"],"names":["$40829437e5d0b8f4$export$2e2bcd8739ae039","this","isPaused","boidSize","lineMaxDist","WallThickness","WallBuffer","InitialPopulation","MaxPopulation","MaxSpeed","MinSpeed","MaxForce","SeperationWeight","AlignmentWeight","CohesionWeight","SphereOfInfluence","CohesionNeighborhood","DesiredSeperation","SimulationSpeed","$715ab79210d57f18$export$2e2bcd8739ae039","p5","sizeMultiplier","color","Math","random","mass","map","draw","position","angle","push","translate","x","y","rotate","fill","stroke","ellipse","pop","$ac9402367fa326fe$export$2e2bcd8739ae039","createVector","windowWidth","windowHeight","heading","PI","velocity","cos","sin","normalize","mult","window","params","shape","value","step","force","acceleration","$parcel$interopDefault","$7Pz0b","Vector","add","mag","limit","warpWorld","wx","wy","b","getDistanceFrom","target","distance","dist","p2","distance2","min","AlignmentForce","boids","averageVelocity","count","forEach","boid","d","div","steer","sub","CohesionForce","centerOfGravity","v","Seek","RepulsionForce","away","desired","Flee","GetSteeringForces","align","repulsion","cohesion","$59907cdca22c2224$export$2e2bcd8739ae039","run","frameCount","drawLines","otherboid","strokeWeight","line","addNewboid","length","is_canvas_infocus","simulation","setup","cnv","createCanvas","mouseOver","mouseOut","style","parent","i","windowResized","resizeCanvas","background","keyPressed","key"],"version":3,"file":"sketch.e73c0154.js.map"}